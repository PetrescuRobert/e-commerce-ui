/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ShopImport } from './routes/shop'
import { Route as SalesImport } from './routes/sales'
import { Route as NewArrivalsImport } from './routes/new-arrivals'
import { Route as BrandsImport } from './routes/brands'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ShopRoute = ShopImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => rootRoute,
} as any)

const SalesRoute = SalesImport.update({
  id: '/sales',
  path: '/sales',
  getParentRoute: () => rootRoute,
} as any)

const NewArrivalsRoute = NewArrivalsImport.update({
  id: '/new-arrivals',
  path: '/new-arrivals',
  getParentRoute: () => rootRoute,
} as any)

const BrandsRoute = BrandsImport.update({
  id: '/brands',
  path: '/brands',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/brands': {
      id: '/brands'
      path: '/brands'
      fullPath: '/brands'
      preLoaderRoute: typeof BrandsImport
      parentRoute: typeof rootRoute
    }
    '/new-arrivals': {
      id: '/new-arrivals'
      path: '/new-arrivals'
      fullPath: '/new-arrivals'
      preLoaderRoute: typeof NewArrivalsImport
      parentRoute: typeof rootRoute
    }
    '/sales': {
      id: '/sales'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof SalesImport
      parentRoute: typeof rootRoute
    }
    '/shop': {
      id: '/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/brands': typeof BrandsRoute
  '/new-arrivals': typeof NewArrivalsRoute
  '/sales': typeof SalesRoute
  '/shop': typeof ShopRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/brands': typeof BrandsRoute
  '/new-arrivals': typeof NewArrivalsRoute
  '/sales': typeof SalesRoute
  '/shop': typeof ShopRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/brands': typeof BrandsRoute
  '/new-arrivals': typeof NewArrivalsRoute
  '/sales': typeof SalesRoute
  '/shop': typeof ShopRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/brands' | '/new-arrivals' | '/sales' | '/shop'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/brands' | '/new-arrivals' | '/sales' | '/shop'
  id: '__root__' | '/' | '/brands' | '/new-arrivals' | '/sales' | '/shop'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BrandsRoute: typeof BrandsRoute
  NewArrivalsRoute: typeof NewArrivalsRoute
  SalesRoute: typeof SalesRoute
  ShopRoute: typeof ShopRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BrandsRoute: BrandsRoute,
  NewArrivalsRoute: NewArrivalsRoute,
  SalesRoute: SalesRoute,
  ShopRoute: ShopRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/brands",
        "/new-arrivals",
        "/sales",
        "/shop"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/brands": {
      "filePath": "brands.tsx"
    },
    "/new-arrivals": {
      "filePath": "new-arrivals.tsx"
    },
    "/sales": {
      "filePath": "sales.tsx"
    },
    "/shop": {
      "filePath": "shop.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
